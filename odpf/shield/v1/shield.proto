syntax = "proto3";
package odpf.shield.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/odpf/proton/shield/v1;shieldv1";
option java_package = "io.odpf.proton.shield.v1";
option java_outer_classname = "Shield";


// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Shield",
    version: "0.1.0";
  };
  schemes: HTTP;
};

service ShieldService {
  // Users
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Get All Users";
    };
  }
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Create User";
    };
  }

  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Get a User by id";
    };
  }

  rpc GetCurrentUser(GetCurrentUserRequest) returns (GetCurrentUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/self",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Get current user";
    };
  }

  rpc UpdateUserByID(UpdateUserByIDRequest) returns (UpdateUserByIDResponse) {
    option (google.api.http) = {
      put: "/v1/users/{id}",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Update User by ID";
    };
  }

  rpc UpdateCurrentUser(UpdateCurrentUserRequest) returns (UpdateCurrentUserResponse) {
    option (google.api.http) = {
      put: "/v1/users/self",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Update current User";
    };
  }

  // Group
  rpc GetGroups(GetGroupsRequest) returns (GetGroupsResponse) {
    option (google.api.http) = {
      get: "/v1/groups",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Get all Groups";
    };
  }

  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse) {
    option (google.api.http) = {
      post: "/v1/groups",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Create Group";
    };
  }

  rpc GetGroupByID(GetGroupByIDRequest) returns (GetGroupByIDResponse) {
    option (google.api.http) = {
      get: "/v1/groups/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Get Group by ID";
    };
  }

  rpc GetGroupUsers(GetGroupUsersRequest) returns (GetGroupUsersResponse) {
    option (google.api.http) = {
      get: "/v1/groups/{id}/users",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Get all Users in a Group";
    };
  }

  rpc UpdateGroupByID(UpdateGroupByIDRequest) returns (UpdateGroupByIDResponse) {
    option (google.api.http) = {
      put: "/v1/groups/{id}",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Update Group by ID";
    };
  }

  // Roles
  rpc GetRoles(GetRolesRequest) returns (GetRolesResponse) {
    option (google.api.http) = {
      get: "/v1/roles",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Get all Roles";
    };
  }

  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
    option (google.api.http) = {
      post: "/v1/roles",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Create Role";
    };
  }

  rpc GetRoleByID(GetRoleByIDRequest) returns (GetRoleByIDResponse) {
    option (google.api.http) = {
      get: "/v1/roles/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Get Role by ID";
    };
  }

  rpc UpdateRoleByID(UpdateRoleByIDRequest) returns (UpdateRoleByIDResponse) {
    option (google.api.http) = {
      put: "/v1/roles/{id}",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Update Role by ID";
    };
  }

  // Organizations
  rpc GetOrganizations(GetOrganizationsRequest) returns (GetOrganizationsResponse) {
    option (google.api.http) = {
      get: "/v1/organizations"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Get all Organization";
    };
  }

  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse) {
    option (google.api.http) = {
      post: "/v1/organizations",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Create Organization";
    };
  }

  rpc GetOrganizationByID(GetOrganizationByIDRequest) returns (GetOrganizationByIDResponse) {
    option (google.api.http) = {
      get: "/v1/organizations/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Get Organization by ID";
    };
  }

  rpc UpdateOrganizationByID(UpdateOrganizationByIDRequest) returns (UpdateOrganizationByIDResponse) {
    option (google.api.http) = {
      put: "/v1/organizations/{id}",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Update Organization by ID";
    };
  }

  // Projects
  rpc GetProjects(GetProjectsRequest) returns (GetProjectsResponse) {
    option (google.api.http) = {
      get: "/v1/projects"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Get all Project";
    };
  }

  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {
    option (google.api.http) = {
      post: "/v1/projects",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Create Project";
    };
  }

  rpc GetProjectByID(GetProjectByIDRequest) returns (GetProjectByIDResponse) {
    option (google.api.http) = {
      get: "/v1/projects/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Get Project by ID";
    };
  }

  rpc UpdateProjectByID(UpdateProjectByIDRequest) returns (UpdateProjectByIDResponse) {
    option (google.api.http) = {
      put: "/v1/projects/{id}",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Update Project by ID";
    };
  }

}

message CreateUserRequestBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string email = 2 [(validate.rules).string.email = true];
  google.protobuf.Struct metadata = 3;
}

message CreateUserRequest {
  CreateUserRequestBody body = 1;
}

message User {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"]; 
  string slug = 3;
  string email = 4 [(validate.rules).string.email = true]; 
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserByIDResponse {
  User user = 1;
}

message GetCurrentUserResponse {
  User user = 1;
}

message UpdateUserByIDResponse {
  User user = 1;
}

message UpdateCurrentUserResponse {
  User user = 1;
}

message UpdateUserByIDRequest {
  string id = 1;
  CreateUserRequestBody body = 2;
}

message GetUserByIDRequest {
  string id = 1;
}

message GetCurrentUserRequest {
}

message GetUsersRequest {
  google.protobuf.Struct fields = 1;
}

message GetUsersResponse {
  repeated User users = 1;
}


message CreateGroupRequestBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 2;
  google.protobuf.Struct metadata = 3;
}

message CreateGroupRequest {
  CreateGroupRequestBody body = 1;
}

message Admin {
  string id = 1;
  string name = 2;
}

message Group {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 3;
  repeated Admin admins = 4;
  bool is_member = 5;
  int32 member_count = 6;
  string org_id = 7;
  google.protobuf.Struct metadata = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

message CreateGroupResponse {
  Group group = 1;
}

message GetGroupByIDResponse {
  Group group = 1;
}

message UpdateGroupByIDResponse {
  Group group = 1;
}

message GetGroupUsersResponse {
  repeated User users = 1;
}

message UpdateGroupByIDRequest {
  string id = 1;
  CreateGroupRequestBody body = 2;
}

message UpdateCurrentUserRequest {
  CreateGroupRequestBody body = 1;
}

message GetGroupByIDRequest {
  string id = 1;
}

message GetGroupUsersRequest {
  string id = 1;
}

message GetGroupsRequest {
  string user_id = 1;
}

message GetGroupsResponse {
  repeated Group groups = 1;
}

message Role {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  repeated string tags = 3;
  repeated string actions = 4;
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message CreateRoleBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  repeated string tags = 2;
  repeated string actions = 3;
  google.protobuf.Struct metadata = 4;
}

message CreateRoleRequest {
  CreateRoleBody body = 1;
}

message CreateRoleResponse {
  Role role = 1;
}

message GetRoleByIDResponse {
  Role role = 1;
}

message UpdateRoleByIDResponse {
  Role role = 1;
}

message GetRoleByIDRequest {
  string id = 1;
}

message UpdateRoleByIDRequest {
  string id = 1;
  CreateRoleBody body = 2;
}

message GetRolesRequest {
}

message GetRolesResponse {
  repeated Role roles = 1;
}



message CreateOrganizationBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 2;
  google.protobuf.Struct metadata = 3;
}

message CreateOrganizationRequest {
  CreateOrganizationBody body = 1;
}

message Organization {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 3;
  google.protobuf.Struct metadata = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateOrganizationResponse {
  Organization organization = 1;
}

message GetOrganizationByIDResponse {
  Organization organization = 1;
}

message UpdateOrganizationByIDResponse {
  Organization organization = 1;
}

message GetOrganizationsRequest {
}

message GetOrganizationsResponse {
  repeated Organization organizations = 1;
}

message GetOrganizationByIDRequest {
  string id = 1;
}

message UpdateOrganizationByIDRequest {
  string id = 1;
  CreateOrganizationBody body = 2;
}


message CreateProjectBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 2;
  google.protobuf.Struct metadata = 3;
}

message CreateProjectRequest {
  CreateProjectBody body = 1;
}

message Project {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 3;
  google.protobuf.Struct metadata = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateProjectResponse {
  Project project = 1;
}

message GetProjectByIDResponse {
  Project project = 1;
}

message UpdateProjectByIDResponse {
  Project project = 1;
}

message GetProjectsRequest {
}

message GetProjectsResponse {
  repeated Project projects = 1;
}

message GetProjectByIDRequest {
  string id = 1;
}

message UpdateProjectByIDRequest {
  string id = 1;
  CreateProjectBody body = 2;
}